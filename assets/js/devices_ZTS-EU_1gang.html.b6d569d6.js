"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[41487],{20538:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>n,data:()=>d});var a=t(6199);const s={},n=(0,t(21065).A)(s,[["render",function(e,o){const t=(0,a.g2)("RouteLink");return(0,a.uX)(),(0,a.CE)("div",null,[o[7]||(o[7]=(0,a.Lk)("h1",{id:"moes-zts-eu-1gang",tabindex:"-1"},[(0,a.Lk)("a",{class:"header-anchor",href:"#moes-zts-eu-1gang"},[(0,a.Lk)("span",null,"Moes ZTS-EU_1gang")])],-1)),(0,a.Lk)("table",null,[o[6]||(o[6]=(0,a.Lk)("thead",null,[(0,a.Lk)("tr",null,[(0,a.Lk)("th"),(0,a.Lk)("th")])],-1)),(0,a.Lk)("tbody",null,[o[2]||(o[2]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Model"),(0,a.Lk)("td",null,"ZTS-EU_1gang")],-1)),(0,a.Lk)("tr",null,[o[1]||(o[1]=(0,a.Lk)("td",null,"Vendor",-1)),(0,a.Lk)("td",null,[(0,a.bF)(t,{to:"/supported-devices/#v=Moes"},{default:(0,a.k6)((()=>o[0]||(o[0]=[(0,a.eW)("Moes")]))),_:1,__:[0]})])]),o[3]||(o[3]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Description"),(0,a.Lk)("td",null,"Wall touch light switch (1 gang)")],-1)),o[4]||(o[4]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Exposes"),(0,a.Lk)("td",null,"switch (state), indicate_light, power_on_behavior")],-1)),o[5]||(o[5]=(0,a.Lk)("tr",null,[(0,a.Lk)("td",null,"Picture"),(0,a.Lk)("td",null,[(0,a.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/ZTS-EU_1gang.png",alt:"Moes ZTS-EU_1gang"})])],-1))])]),o[8]||(o[8]=(0,a.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch"><span>Switch</span></a></h3><p>The current state of this switch is in the published state under the <code>state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. It&#39;s not possible to read (<code>/get</code>) this value.</p><h3 id="indicate-light-enum" tabindex="-1"><a class="header-anchor" href="#indicate-light-enum"><span>Indicate light (enum)</span></a></h3><p>Indicator light status. Value can be found in the published state on the <code>indicate_light</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;indicate_light&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>switch</code>, <code>position</code>, <code>freeze</code>.</p><h3 id="power-on-behavior-enum" tabindex="-1"><a class="header-anchor" href="#power-on-behavior-enum"><span>Power on behavior (enum)</span></a></h3><p>Controls the behavior when the device is powered on. Value can be found in the published state on the <code>power_on_behavior</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;power_on_behavior&quot;: NEW_VALUE}</code>. The possible values are: <code>off</code>, <code>on</code>, <code>previous</code>.</p>',7))])}]]),d=JSON.parse('{"path":"/devices/ZTS-EU_1gang.html","title":"Moes ZTS-EU_1gang control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Moes ZTS-EU_1gang control via MQTT","description":"Integrate your Moes ZTS-EU_1gang via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2021-03-30T20:29:35.000Z"},"git":{"updatedTime":1750531982000,"contributors":[{"name":"s-gordon","username":"s-gordon","email":"4898021+s-gordon@users.noreply.github.com","commits":1,"url":"https://github.com/s-gordon"},{"name":"Shane Gordon","username":"","email":"se2gordon@students.latrobe.edu.au","commits":1},{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"04c563ab4a2e8ddc075262a727728a28337b34fb","time":1750531982000,"email":"4898021+s-gordon@users.noreply.github.com","author":"Shane Gordon","message":"Added RB-ElectricityDsp-061-3 smart plug (#3884)","coAuthors":[{"name":"Shane Gordon","email":"se2gordon@students.latrobe.edu.au"},{"name":"Koen Kanters","email":"koenkanters94@gmail.com"}]}]},"filePathRelative":"devices/ZTS-EU_1gang.md"}')}}]);