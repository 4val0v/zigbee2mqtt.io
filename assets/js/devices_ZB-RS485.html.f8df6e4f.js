"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[65651],{78457:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>s,data:()=>d});var o=a(6199);const n={},s=(0,a(21065).A)(n,[["render",function(e,t){const a=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[7]||(t[7]=(0,o.Lk)("h1",{id:"easyiot-zb-rs485",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#easyiot-zb-rs485"},[(0,o.Lk)("span",null,"easyiot ZB-RS485")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"ZB-RS485")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(a,{to:"/supported-devices/#v=easyiot"},{default:(0,o.k6)((()=>t[0]||(t[0]=[(0,o.eW)("easyiot")]))),_:1,__:[0]})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Zigbee to RS485 controller")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"last_received_command, send_command")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/ZB-RS485.png",alt:"easyiot ZB-RS485"})])],-1))])]),t[8]||(t[8]=(0,o.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="last-received-command-text" tabindex="-1"><a class="header-anchor" href="#last-received-command-text"><span>Last received command (text)</span></a></h3><p>Received data. Value can be found in the published state on the <code>last_received_command</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value.</p><h3 id="send-command-text" tabindex="-1"><a class="header-anchor" href="#send-command-text"><span>Send command (text)</span></a></h3><p>Send data. Value will <strong>not</strong> be published in the state. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;send_command&quot;: NEW_VALUE}</code>.</p>',5))])}]]),d=JSON.parse('{"path":"/devices/ZB-RS485.html","title":"easyiot ZB-RS485 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"easyiot ZB-RS485 control via MQTT","description":"Integrate your easyiot ZB-RS485 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2024-11-30T20:27:20.000Z"},"git":{"updatedTime":1750531982000,"contributors":[{"name":"s-gordon","username":"s-gordon","email":"4898021+s-gordon@users.noreply.github.com","commits":1,"url":"https://github.com/s-gordon"},{"name":"Shane Gordon","username":"","email":"se2gordon@students.latrobe.edu.au","commits":1},{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"04c563ab4a2e8ddc075262a727728a28337b34fb","time":1750531982000,"email":"4898021+s-gordon@users.noreply.github.com","author":"Shane Gordon","message":"Added RB-ElectricityDsp-061-3 smart plug (#3884)","coAuthors":[{"name":"Shane Gordon","email":"se2gordon@students.latrobe.edu.au"},{"name":"Koen Kanters","email":"koenkanters94@gmail.com"}]}]},"filePathRelative":"devices/ZB-RS485.md"}')}}]);